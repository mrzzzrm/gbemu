#include "emu.h"
#include "cpu/defines.h"
#include "mem/io/lcd.h"
#include "mem/mbc/rtc.h"
#include "debug/debug.h"
#include "loader.h"
#include "sys/sys.h"

#define QUANTUM 1000

void emu_init() {
    mem_init();
    cpu_init();
    joy_init();
}

void emu_close() {
    mem_close();
}

static void emu_reset() {
    mem_reset();
    cpu_reset();
    lcd_reset();
}


void emu_load_rom(u8 *data, size_t size) {
    load_rom(data, size));
    emu_reset();
}

void emu_run_standby() {
    u8 standby = 1;
    while(standby) {
        unsigned int t;
        for(t = 0; t < QUANTUM && standby; t++) {
            debug_update();
            debug_before();

            lcd_step();
            timers_step(mcs);
            
            if(ints_handle_standby()) {
               standby = 0; 
            }

            debug_after();
        }
        sys_invoke();
    }
}

void emu_run() {
    debug_init();
    for(;;) {
        unsigned int t;
        for(t = 0; t < QUANTUM; t++) {
            debug_update();
            debug_before();

            cpu_step();
            lcd_step();
            timers_step(mcs);
            ints_handle();

            debug_after();
        }
        sys_invoke();
    }
}

